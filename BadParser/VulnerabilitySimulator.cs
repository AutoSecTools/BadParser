using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BadParser
{
    public class VulnerabilitySimulator
    {
        public unsafe void CheckName(Widget widget)
        {
            if (widget.Name != null &&
                widget.Name.Length > 0x100)
            {
                *((uint*)0xdead0001) = 0xbad00bad;
            }
        }

        public unsafe void CheckPositionX(Widget widget)
        {
            if (widget.Position != null &&
                widget.Position.X > long.MaxValue / 2)
            {
                *((uint*)0xdead0002) = 0xbad00bad;
            }
        }

        public unsafe void CheckPositionY(Widget widget)
        {
            if (widget.Position != null &&
                widget.Position.Y < 0)
            {
                *((uint*)0xdead0003) = 0xbad00bad;
            }
        }

        public unsafe void CheckBufferSize(Widget widget)
        {
            if (widget.Buffer != null &&
                widget.Buffer.Length > 0x200)
            {
                *((uint*)0xdead0004) = 0xbad00bad;
            }
        }

        public unsafe void CheckBufferNull(Widget widget)
        {
            if (widget.Buffer == null)
            {
                *((uint*)0xdead0005) = 0xbad00bad;
            }
        }

        public unsafe void CheckWidgetCount(Widget[] widgets)
        {
            if (widgets.Length > 0x100)
            {
                *((uint*)0xdead0006) = 0xbad00bad;
            }
        }

        public unsafe void CheckVariant(Widget widget)
        {
            if (widget.Variant != null &&
                widget.Variant.GetType().IsArray)
            {
                *((uint*)0xdead0007) = 0xbad00bad;
            }
        }
    }
}
